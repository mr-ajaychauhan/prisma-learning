// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user and Post or one to many relationship 
model User {
  id               String          @id @default(uuid())
  age              Int
  name             String
  email            String          @unique
  writtenPosts     Post[]          @relation("writtenPosts")
  favoritePosts    Post[]          @relation("FavoritePosts")
  role             Role            @default(BASIC)
  UserPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique

  //block label attriubute
  // if  you use this it work like same age and name or not use repeated 
  // email must be 
  @@unique([age, name])
  //index or use to short things
  @@index([email])
}

// one to one relationship
model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  upatedAt      DateTime   @updatedAt
  author        User       @relation("writtenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]

  //block label id attribute  

  //composit id auto genrate 

  //currently not in use

  // @@id([title, authorId])
}

//many to many relationship through category

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
